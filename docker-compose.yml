version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_PORT: 9092
      KAFKA_LISTENER_INTERNAL: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_EXTERNAL: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_NAME_INTERNAL: PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  consumer:
    build:
      context: ./consumer
    depends_on:
      - kafka
      - mysql
    environment:
      - KAFKA_BROKER=kafka:9092
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DB=pedidos
    restart: always

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: pedidos
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d

  api:
    build:
      context: ./api
    ports:
      - "5000:5000"
    depends_on:
      - kafka
      - mysql

  nginx:
    image: nginx:latest
    build: 
      context: ./frontend
    ports:
      - "8080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf 
    depends_on:
      - api
      - consumer
    restart: always

  frontend:
    build: ./frontend
    ports:
      - "8081:80"
    depends_on:
      - consumer
      - api
      - mysql
    restart: always

volumes:
  mysql_data:
